{"version":3,"sources":["webpack:///webpack/bootstrap 47ffbe67421f43455c6a","webpack:///./scripts/EntryPoint.jsx"],"names":["Page","props","content","changeState","React","Component","ReduxConnectedPage","ReactRedux","connect","state","dispatch","type","Reducer","action","number","ReduxStore","Redux","createStore","$","document","ready","ReactDOM","render","getElementById"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;ACtCA;KACMA,I;;;;;;;;;;;kCACO;AACL,oBAAQ;AAAA;AAAA,mBAAK,WAAU,iBAAf;AACI;AAAA;AAAA;AAAK,sEAAiD,KAAKC,KAAL,CAAWC;AAAjE,kBADJ;AAEI;AAAA;AAAA,uBAAG,MAAK,GAAR,EAAY,SAAS,KAAKD,KAAL,CAAWE,WAAhC;AAAA;AAAA;AAFJ,cAAR;AAIH;;;;GANcC,MAAMC,S;;AASzB;AACA;;;AACA,KAAMC,qBAAqBC,WAAWC,OAAX;AACvB;AACA,WAASC,KAAT,EAAgB;AACZ,YAAOA,KAAP;AACH,EAJsB;AAKvB;AACA,WAAUC,QAAV,EAAoB;AAChB,YAAO;AACHP,sBAAa,uBAAW;AAAEO,sBAAS,EAAEC,MAAM,gBAAR,EAAT;AAAuC;AAD9D,MAAP;AAGH,EAVsB,EAW1BX,IAX0B,CAA3B;;AAaA;AACA;AACA,KAAMY,UAAU,SAAVA,OAAU,CAAUH,KAAV,EAAiBI,MAAjB,EAAyB;AACrC,SAAIA,OAAOF,IAAP,KAAgB,gBAApB,EAAsC;AAClC,gBAAO;AACHT,sBAAS,gBAAgBO,MAAMK,MAAN,EAAhB,GAAiC,QADvC;AAEHA,qBAAQL,MAAMK;AAFX,UAAP;AAIH;;AAED,YAAO,EAAEZ,SAAS,wBAAX,EAAqCY,QAAQ,CAA7C,EAAP;AACH,EATD;;AAWA;AACA,KAAMC,aAAaC,MAAMC,WAAN,CAAkBL,OAAlB,CAAnB;AACAM,GAAEC,QAAF,EAAYC,KAAZ,CAAkB,YAAW;AACzBC,cAASC,MAAT,CACF;AAAC,mBAAD,CAAY,QAAZ;AAAA,WAAqB,OAAOP,UAA5B;AACU,6BAAC,kBAAD;AADV,MADE,EAIFI,SAASI,cAAT,CAAwB,YAAxB,CAJE;AAMH,EAPD,E","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 47ffbe67421f43455c6a","// 1. Create a React component that renders some HTML.\r\nclass Page extends React.Component {\r\n    render() {\r\n        return (<div className=\"react-container\">\r\n                    <h1>{\"Hello world! The state.content variable is: \" + this.props.content}</h1>\r\n                    <a href=\"#\" onClick={this.props.changeState}>Click to change the state.</a>\r\n                </div>);\r\n    }\r\n}\r\n\r\n// 2. Connect the React component (Page) to Redux state management.\r\n// (The objects returned from both methods are combined and become 'this.props' in the React component).\r\nconst ReduxConnectedPage = ReactRedux.connect(\r\n    // Map state to props\r\n    function(state) {\r\n        return state;\r\n    },\r\n    // Map dispatch to props\r\n    function (dispatch) {\r\n        return {\r\n            changeState: function() { dispatch({ type: \"EXAMPLE_ACTION\" }); }\r\n        };\r\n    })\r\n(Page);\r\n\r\n// 3. Set up a Reducer function to update the state whenever an event occurs.\r\n// 'state' is the current page state, and 'action' contains info about what event occurred.\r\nconst Reducer = function (state, action) {\r\n    if (action.type === \"EXAMPLE_ACTION\") {\r\n        return {\r\n            content: \"it changed \" + state.number++ + \" times\", \r\n            number: state.number\r\n        };\r\n    }\r\n\r\n    return { content: \"some-random-state-info\", number: 1 };\r\n}\r\n\r\n// 4. This is just boilerplate to get everything hooked up and rendered on the page.\r\nconst ReduxStore = Redux.createStore(Reducer);\r\n$(document).ready(function() {\r\n    ReactDOM.render(\r\n\t\t<ReactRedux.Provider store={ReduxStore}>\r\n            <ReduxConnectedPage/>\r\n        </ReactRedux.Provider>,\r\n\t\tdocument.getElementById('react-demo')\r\n\t);\r\n});\n\n\n// WEBPACK FOOTER //\n// ./scripts/EntryPoint.jsx"],"sourceRoot":""}